import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
1.
x = [i for i in range(1,8)]
y = [3.5, 3.8, 4.2, 4.5, 5, 5.5, 7]
plt.plot(x, y)
plt.show()

plt.scatter(x, y)
plt.show()

2.
t = np.linspace(0, 10, 51)
f = np.cos(t)
plt.axis([0.5, 9.5, -2.5, 2.5])
plt.plot(t, f, color='green')
plt.title('График f(t)')
plt.xlabel('Значение t')
plt.ylabel('Значение f')
plt.show()

3.
x = np.linspace(-3, 3, 51)
y1 = x**2
y2 = 2 * x + 0.5
y3 = -3 * x - 1.5
y4 = np.sin(x)

fig, ax = plt.subplots(nrows=2, ncols=2)
ax1, ax2, ax3, ax4 = ax.flatten()

ax1.plot(x, y1)
ax1.set_title('График y1')
ax1.set_xlim([-5, 5]) 

ax2.plot(x, y2)
ax2.set_title('График y2')

ax3.plot(x, y3)
ax3.set_title('График y3')

ax4.plot(x, y4)
ax4.set_title('График y4')

fig.set_size_inches(8, 6)
plt.subplots_adjust(hspace=0.3, wspace=0.3)

4.
DATASET_PATH = '/Users/evgeny/Downloads/creditcard.csv'

df = pd.read_csv(DATASET_PATH)
df.head()
Class_info = df['Class'].value_counts()
Class_info.plot(kind='bar')
Class_info.plot(kind='bar', logy=True)

trans1 = df.set_index('Class')['V1'].filter(like='1', axis=0)
trans2 = df.set_index('Class')['V1'].filter(like='0', axis=0)

plt.hist(trans1, bins=20, color='red', edgecolor='black', orientation='horizontal', density=True, alpha=0.5)
plt.hist(trans2, bins=20, color='lightgrey', edgecolor='black', orientation='horizontal', density=True, alpha=0.5)

plt.plot(kind='barh')
plt.xlabel('Class')
plt.legend(labels=['Class 0', 'Class 1'])

plt.show()


5.
a = np.arange(12, 24)

a1 = a.reshape(2, 6)
a2 = a.reshape(6, 2)
a3 = a.reshape(3, 4)
a4 = a.reshape(4, 3)
a5 = a.reshape(12, 1)

a1 = a.reshape(-1, 6)
a2 = a.reshape(-1, 2)
a3 = a.reshape(3, -1)
a4 = a.reshape(4, -1)
a5 = a.reshape(12, 1)

# Да, можно

z = np.random.randn(3, 4)

a = np.arange(20, 0, -2)
a.shape

b = np.arange(20, 0, -2).reshape(1, 10)
b.shape
# разница в том что Б двумерный а А одномерный

a = np.zeros((2, 2))
a

b = np.ones((3, 2))
b

v = np.vstack((a, b))
v.size

a = np.arange(0, 12)
A = a.reshape((4, 3))
At = A.T

B = np.dot(A, At)
B.shape

# B_inv = np.linalg.inv(B) - не получится. почему не знаю

d = np.random.seed(42)

c = np.random.randint(0, 16,16)
c

C = c.reshape((4, 4))
C

D = B + C * 10
D

np.linalg.det(D)
np.linalg.matrix_rank(D)

D_inv = np.linalg.inv(D)
D_inv

D_inv = np.where(D_inv < 0, 0,1)
D_inv
